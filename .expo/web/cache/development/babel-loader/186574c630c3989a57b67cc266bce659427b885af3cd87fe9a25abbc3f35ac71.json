{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { db } from \"../config/firebase\";\nimport { collection, doc, setDoc, getDoc, getDocs, updateDoc, deleteDoc, query, where, orderBy } from 'firebase/firestore';\nvar BUSINESSES_COLLECTION = 'businesses';\nvar BusinessService = function () {\n  function BusinessService() {\n    _classCallCheck(this, BusinessService);\n    this.businesses = [{\n      id: 1,\n      name: 'Restaurante El Cubano',\n      type: 'Comida criolla',\n      rating: 4.8,\n      delivery: '20-30 min',\n      phone: '+53 5234 5678',\n      address: 'Calle Martí #45, Mayarí Arriba',\n      isOpen: true,\n      deliveryType: 'both',\n      description: 'Comida cubana tradicional con los mejores sabores de la isla',\n      category: 'Restaurante',\n      openTime: '08:00',\n      closeTime: '22:00',\n      products: [{\n        id: 1,\n        name: 'Ropa Vieja',\n        description: 'Carne deshebrada con sofrito cubano',\n        price: 150,\n        category: 'Platos principales',\n        available: true\n      }, {\n        id: 2,\n        name: 'Arroz con Pollo',\n        description: 'Arroz amarillo con pollo y vegetales',\n        price: 120,\n        category: 'Platos principales',\n        available: true\n      }, {\n        id: 3,\n        name: 'Flan de Leche',\n        description: 'Postre tradicional cubano',\n        price: 45,\n        category: 'Postres',\n        available: true\n      }],\n      offers: [{\n        id: 1,\n        title: 'Combo Familiar',\n        description: '2 platos principales + 2 bebidas + postre',\n        originalPrice: 350,\n        discountPrice: 280,\n        validUntil: '2024-12-31',\n        active: true\n      }]\n    }, {\n      id: 2,\n      name: 'Pizzería La Italiana',\n      type: 'Pizza y pasta',\n      rating: 4.6,\n      delivery: '25-35 min',\n      phone: '+53 5345 6789',\n      address: 'Calle Independencia #67, Mayarí Arriba',\n      isOpen: true,\n      deliveryType: 'delivery',\n      description: 'Las mejores pizzas y pastas de la ciudad',\n      category: 'Pizzería',\n      openTime: '11:00',\n      closeTime: '23:00',\n      products: [{\n        id: 4,\n        name: 'Pizza Margherita',\n        description: 'Pizza clásica con tomate, mozzarella y albahaca',\n        price: 150,\n        category: 'Pizzas',\n        available: true\n      }, {\n        id: 5,\n        name: 'Pasta Carbonara',\n        description: 'Pasta con salsa cremosa y panceta',\n        price: 130,\n        category: 'Pastas',\n        available: true\n      }],\n      offers: []\n    }, {\n      id: 3,\n      name: 'Cafetería Central',\n      type: 'Café y repostería',\n      rating: 4.7,\n      delivery: '15-25 min',\n      phone: '+53 5456 7890',\n      address: 'Calle Céspedes #89, Mayarí Arriba',\n      isOpen: false,\n      deliveryType: 'pickup',\n      description: 'El mejor café y repostería de la ciudad',\n      category: 'Cafetería',\n      openTime: '06:00',\n      closeTime: '18:00',\n      products: [{\n        id: 6,\n        name: 'Café Cubano',\n        description: 'Café fuerte y aromático',\n        price: 25,\n        category: 'Bebidas',\n        available: true\n      }, {\n        id: 7,\n        name: 'Pastel de Tres Leches',\n        description: 'Delicioso postre tradicional',\n        price: 45,\n        category: 'Postres',\n        available: true\n      }],\n      offers: []\n    }, {\n      id: 4,\n      name: 'Farmacia San José',\n      type: 'Farmacia y medicamentos',\n      rating: 4.9,\n      delivery: '10-15 min',\n      phone: '+53 5567 8901',\n      address: 'Calle Maceo #123, Mayarí Arriba',\n      isOpen: true,\n      deliveryType: 'both',\n      description: 'Medicamentos y productos de salud',\n      category: 'Farmacia',\n      openTime: '07:00',\n      closeTime: '21:00',\n      products: [{\n        id: 8,\n        name: 'Paracetamol',\n        description: 'Analgésico y antipirético',\n        price: 15,\n        category: 'Medicamentos',\n        available: true\n      }, {\n        id: 9,\n        name: 'Vitaminas',\n        description: 'Complejo vitamínico',\n        price: 35,\n        category: 'Suplementos',\n        available: true\n      }],\n      offers: []\n    }];\n    this.listeners = [];\n  }\n  return _createClass(BusinessService, [{\n    key: \"getAllBusinesses\",\n    value: function () {\n      var _getAllBusinesses = _asyncToGenerator(function* () {\n        try {\n          var firebaseBusinesses = yield this.getActiveBusinessesFromFirebase();\n          if (firebaseBusinesses && firebaseBusinesses.length > 0) {\n            var firebaseMap = new Map();\n            firebaseBusinesses.forEach(function (business) {\n              firebaseMap.set(business.id.toString(), business);\n            });\n            var combinedBusinesses = _toConsumableArray(firebaseBusinesses);\n            this.businesses.forEach(function (localBusiness) {\n              if (!firebaseMap.has(localBusiness.id.toString())) {\n                combinedBusinesses.push(localBusiness);\n              }\n            });\n            this.businesses = combinedBusinesses;\n            return combinedBusinesses;\n          }\n        } catch (error) {\n          console.error('Error loading businesses from Firebase:', error);\n        }\n        return _toConsumableArray(this.businesses);\n      });\n      function getAllBusinesses() {\n        return _getAllBusinesses.apply(this, arguments);\n      }\n      return getAllBusinesses;\n    }()\n  }, {\n    key: \"getBusinessById\",\n    value: function getBusinessById(id) {\n      return this.businesses.find(function (business) {\n        return business.id === id;\n      });\n    }\n  }, {\n    key: \"addBusiness\",\n    value: function addBusiness(businessData) {\n      var newBusiness = _objectSpread(_objectSpread({\n        id: Date.now()\n      }, businessData), {}, {\n        rating: 5.0,\n        isOpen: true,\n        products: businessData.products || [],\n        offers: businessData.offers || []\n      });\n      this.businesses.push(newBusiness);\n      this.notifyListeners();\n      return newBusiness;\n    }\n  }, {\n    key: \"updateBusiness\",\n    value: function updateBusiness(id, updates) {\n      var index = this.businesses.findIndex(function (business) {\n        return business.id === id;\n      });\n      if (index !== -1) {\n        this.businesses[index] = _objectSpread(_objectSpread({}, this.businesses[index]), updates);\n        this.notifyListeners();\n        return this.businesses[index];\n      }\n      return null;\n    }\n  }, {\n    key: \"addProductToBusiness\",\n    value: function addProductToBusiness(businessId, product) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        var newProduct = _objectSpread({\n          id: Date.now()\n        }, product);\n        business.products.push(newProduct);\n        this.notifyListeners();\n        return newProduct;\n      }\n      return null;\n    }\n  }, {\n    key: \"updateBusinessProduct\",\n    value: function updateBusinessProduct(businessId, productId, updates) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        var productIndex = business.products.findIndex(function (p) {\n          return p.id === productId;\n        });\n        if (productIndex !== -1) {\n          business.products[productIndex] = _objectSpread(_objectSpread({}, business.products[productIndex]), updates);\n          this.notifyListeners();\n          return business.products[productIndex];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"removeProductFromBusiness\",\n    value: function removeProductFromBusiness(businessId, productId) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        business.products = business.products.filter(function (p) {\n          return p.id !== productId;\n        });\n        this.notifyListeners();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"addOfferToBusiness\",\n    value: function addOfferToBusiness(businessId, offer) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        var newOffer = _objectSpread({\n          id: Date.now()\n        }, offer);\n        business.offers.push(newOffer);\n        this.notifyListeners();\n        return newOffer;\n      }\n      return null;\n    }\n  }, {\n    key: \"updateBusinessOffer\",\n    value: function updateBusinessOffer(businessId, offerId, updates) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        var offerIndex = business.offers.findIndex(function (o) {\n          return o.id === offerId;\n        });\n        if (offerIndex !== -1) {\n          business.offers[offerIndex] = _objectSpread(_objectSpread({}, business.offers[offerIndex]), updates);\n          this.notifyListeners();\n          return business.offers[offerIndex];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"removeOfferFromBusiness\",\n    value: function removeOfferFromBusiness(businessId, offerId) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        business.offers = business.offers.filter(function (o) {\n          return o.id !== offerId;\n        });\n        this.notifyListeners();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"getOpenBusinesses\",\n    value: function getOpenBusinesses() {\n      return this.businesses.filter(function (business) {\n        return business.isOpen;\n      });\n    }\n  }, {\n    key: \"getBusinessesByCategory\",\n    value: function getBusinessesByCategory(category) {\n      return this.businesses.filter(function (business) {\n        return business.category.toLowerCase().includes(category.toLowerCase()) || business.type.toLowerCase().includes(category.toLowerCase());\n      });\n    }\n  }, {\n    key: \"searchBusinesses\",\n    value: function searchBusinesses(query) {\n      var searchTerm = query.toLowerCase();\n      return this.businesses.filter(function (business) {\n        return business.name.toLowerCase().includes(searchTerm) || business.type.toLowerCase().includes(searchTerm) || business.category.toLowerCase().includes(searchTerm) || business.description.toLowerCase().includes(searchTerm);\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(listener) {\n      var _this = this;\n      this.listeners.push(listener);\n      return function () {\n        _this.listeners = _this.listeners.filter(function (l) {\n          return l !== listener;\n        });\n      };\n    }\n  }, {\n    key: \"notifyListeners\",\n    value: function notifyListeners() {\n      var _this2 = this;\n      this.listeners.forEach(function (listener) {\n        return listener(_this2.businesses);\n      });\n    }\n  }, {\n    key: \"toggleBusinessStatus\",\n    value: function toggleBusinessStatus(businessId) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        business.isOpen = !business.isOpen;\n        this.notifyListeners();\n        return business.isOpen;\n      }\n      return null;\n    }\n  }, {\n    key: \"getBusinessStats\",\n    value: function getBusinessStats(businessId) {\n      var business = this.getBusinessById(businessId);\n      if (business) {\n        return {\n          totalProducts: business.products.length,\n          availableProducts: business.products.filter(function (p) {\n            return p.available;\n          }).length,\n          totalOffers: business.offers.length,\n          activeOffers: business.offers.filter(function (o) {\n            return o.active;\n          }).length,\n          rating: business.rating\n        };\n      }\n      return null;\n    }\n  }, {\n    key: \"createOrUpdateBusinessInFirebase\",\n    value: function () {\n      var _createOrUpdateBusinessInFirebase = _asyncToGenerator(function* (businessData) {\n        try {\n          var businessRef = doc(db, BUSINESSES_COLLECTION, businessData.id.toString());\n          yield setDoc(businessRef, _objectSpread(_objectSpread({}, businessData), {}, {\n            createdAt: businessData.createdAt || new Date(),\n            updatedAt: new Date(),\n            isActive: businessData.isActive !== undefined ? businessData.isActive : true\n          }), {\n            merge: true\n          });\n          return _objectSpread({\n            id: businessData.id\n          }, businessData);\n        } catch (error) {\n          console.error('Error creating/updating business in Firebase:', error);\n          throw error;\n        }\n      });\n      function createOrUpdateBusinessInFirebase(_x) {\n        return _createOrUpdateBusinessInFirebase.apply(this, arguments);\n      }\n      return createOrUpdateBusinessInFirebase;\n    }()\n  }, {\n    key: \"getActiveBusinessesFromFirebase\",\n    value: function () {\n      var _getActiveBusinessesFromFirebase = _asyncToGenerator(function* () {\n        try {\n          var businessesRef = collection(db, BUSINESSES_COLLECTION);\n          var q = query(businessesRef, where('isActive', '==', true), orderBy('name'));\n          var querySnapshot = yield getDocs(q);\n          var businesses = [];\n          querySnapshot.forEach(function (doc) {\n            businesses.push(_objectSpread({\n              id: doc.id\n            }, doc.data()));\n          });\n          return businesses;\n        } catch (error) {\n          console.error('Error getting active businesses from Firebase:', error);\n          return this.getOpenBusinesses();\n        }\n      });\n      function getActiveBusinessesFromFirebase() {\n        return _getActiveBusinessesFromFirebase.apply(this, arguments);\n      }\n      return getActiveBusinessesFromFirebase;\n    }()\n  }, {\n    key: \"updateBusinessStatusInFirebase\",\n    value: function () {\n      var _updateBusinessStatusInFirebase = _asyncToGenerator(function* (businessId, isOpen) {\n        try {\n          var businessRef = doc(db, BUSINESSES_COLLECTION, businessId.toString());\n          yield updateDoc(businessRef, {\n            isOpen: isOpen,\n            updatedAt: new Date()\n          });\n        } catch (error) {\n          console.error('Error updating business status in Firebase:', error);\n          throw error;\n        }\n      });\n      function updateBusinessStatusInFirebase(_x2, _x3) {\n        return _updateBusinessStatusInFirebase.apply(this, arguments);\n      }\n      return updateBusinessStatusInFirebase;\n    }()\n  }]);\n}();\nvar businessService = new BusinessService();\nexport default businessService;\nexport { BusinessService };","map":{"version":3,"names":["db","collection","doc","setDoc","getDoc","getDocs","updateDoc","deleteDoc","query","where","orderBy","BUSINESSES_COLLECTION","BusinessService","_classCallCheck","businesses","id","name","type","rating","delivery","phone","address","isOpen","deliveryType","description","category","openTime","closeTime","products","price","available","offers","title","originalPrice","discountPrice","validUntil","active","listeners","_createClass","key","value","_getAllBusinesses","_asyncToGenerator","firebaseBusinesses","getActiveBusinessesFromFirebase","length","firebaseMap","Map","forEach","business","set","toString","combinedBusinesses","_toConsumableArray","localBusiness","has","push","error","console","getAllBusinesses","apply","arguments","getBusinessById","find","addBusiness","businessData","newBusiness","_objectSpread","Date","now","notifyListeners","updateBusiness","updates","index","findIndex","addProductToBusiness","businessId","product","newProduct","updateBusinessProduct","productId","productIndex","p","removeProductFromBusiness","filter","addOfferToBusiness","offer","newOffer","updateBusinessOffer","offerId","offerIndex","o","removeOfferFromBusiness","getOpenBusinesses","getBusinessesByCategory","toLowerCase","includes","searchBusinesses","searchTerm","subscribe","listener","_this","l","_this2","toggleBusinessStatus","getBusinessStats","totalProducts","availableProducts","totalOffers","activeOffers","_createOrUpdateBusinessInFirebase","businessRef","createdAt","updatedAt","isActive","undefined","merge","createOrUpdateBusinessInFirebase","_x","_getActiveBusinessesFromFirebase","businessesRef","q","querySnapshot","data","_updateBusinessStatusInFirebase","updateBusinessStatusInFirebase","_x2","_x3","businessService"],"sources":["D:/HARBOR/RAPIFLOW/src/services/businessService.js"],"sourcesContent":["import { db } from '../config/firebase';\nimport { \n  collection, \n  doc, \n  setDoc, \n  getDoc, \n  getDocs, \n  updateDoc, \n  deleteDoc, \n  query, \n  where, \n  orderBy \n} from 'firebase/firestore';\n\nconst BUSINESSES_COLLECTION = 'businesses';\n\n// Servicio para gestionar los negocios registrados\nclass BusinessService {\n  constructor() {\n    // Lista inicial de negocios (simulando una base de datos)\n    this.businesses = [\n      { \n        id: 1, \n        name: 'Restaurante El Cubano', \n        type: 'Comida criolla', \n        rating: 4.8, \n        delivery: '20-30 min',\n        phone: '+53 5234 5678',\n        address: 'Calle Martí #45, Mayarí Arriba',\n        isOpen: true,\n        deliveryType: 'both',\n        description: 'Comida cubana tradicional con los mejores sabores de la isla',\n        category: 'Restaurante',\n        openTime: '08:00',\n        closeTime: '22:00',\n        products: [\n          { id: 1, name: 'Ropa Vieja', description: 'Carne deshebrada con sofrito cubano', price: 150, category: 'Platos principales', available: true },\n          { id: 2, name: 'Arroz con Pollo', description: 'Arroz amarillo con pollo y vegetales', price: 120, category: 'Platos principales', available: true },\n          { id: 3, name: 'Flan de Leche', description: 'Postre tradicional cubano', price: 45, category: 'Postres', available: true }\n        ],\n        offers: [\n          {\n            id: 1,\n            title: 'Combo Familiar',\n            description: '2 platos principales + 2 bebidas + postre',\n            originalPrice: 350,\n            discountPrice: 280,\n            validUntil: '2024-12-31',\n            active: true\n          }\n        ]\n      },\n      { \n        id: 2, \n        name: 'Pizzería La Italiana', \n        type: 'Pizza y pasta', \n        rating: 4.6, \n        delivery: '25-35 min',\n        phone: '+53 5345 6789',\n        address: 'Calle Independencia #67, Mayarí Arriba',\n        isOpen: true,\n        deliveryType: 'delivery',\n        description: 'Las mejores pizzas y pastas de la ciudad',\n        category: 'Pizzería',\n        openTime: '11:00',\n        closeTime: '23:00',\n        products: [\n          { id: 4, name: 'Pizza Margherita', description: 'Pizza clásica con tomate, mozzarella y albahaca', price: 150, category: 'Pizzas', available: true },\n          { id: 5, name: 'Pasta Carbonara', description: 'Pasta con salsa cremosa y panceta', price: 130, category: 'Pastas', available: true }\n        ],\n        offers: []\n      },\n      { \n        id: 3, \n        name: 'Cafetería Central', \n        type: 'Café y repostería', \n        rating: 4.7, \n        delivery: '15-25 min',\n        phone: '+53 5456 7890',\n        address: 'Calle Céspedes #89, Mayarí Arriba',\n        isOpen: false,\n        deliveryType: 'pickup',\n        description: 'El mejor café y repostería de la ciudad',\n        category: 'Cafetería',\n        openTime: '06:00',\n        closeTime: '18:00',\n        products: [\n          { id: 6, name: 'Café Cubano', description: 'Café fuerte y aromático', price: 25, category: 'Bebidas', available: true },\n          { id: 7, name: 'Pastel de Tres Leches', description: 'Delicioso postre tradicional', price: 45, category: 'Postres', available: true }\n        ],\n        offers: []\n      },\n      {\n        id: 4,\n        name: 'Farmacia San José',\n        type: 'Farmacia y medicamentos',\n        rating: 4.9,\n        delivery: '10-15 min',\n        phone: '+53 5567 8901',\n        address: 'Calle Maceo #123, Mayarí Arriba',\n        isOpen: true,\n        deliveryType: 'both',\n        description: 'Medicamentos y productos de salud',\n        category: 'Farmacia',\n        openTime: '07:00',\n        closeTime: '21:00',\n        products: [\n          { id: 8, name: 'Paracetamol', description: 'Analgésico y antipirético', price: 15, category: 'Medicamentos', available: true },\n          { id: 9, name: 'Vitaminas', description: 'Complejo vitamínico', price: 35, category: 'Suplementos', available: true }\n        ],\n        offers: []\n      }\n    ];\n    \n    this.listeners = [];\n  }\n\n  // Obtener todos los negocios\n  async getAllBusinesses() {\n    try {\n      // Intentar cargar desde Firebase primero\n      const firebaseBusinesses = await this.getActiveBusinessesFromFirebase();\n      \n      // Si hay datos de Firebase, combinarlos con los locales\n      if (firebaseBusinesses && firebaseBusinesses.length > 0) {\n        // Crear un mapa de negocios de Firebase por ID\n        const firebaseMap = new Map();\n        firebaseBusinesses.forEach(business => {\n          firebaseMap.set(business.id.toString(), business);\n        });\n        \n        // Combinar con negocios locales, dando prioridad a Firebase\n        const combinedBusinesses = [...firebaseBusinesses];\n        \n        // Agregar negocios locales que no estén en Firebase\n        this.businesses.forEach(localBusiness => {\n          if (!firebaseMap.has(localBusiness.id.toString())) {\n            combinedBusinesses.push(localBusiness);\n          }\n        });\n        \n        // Actualizar la lista local con los datos combinados\n        this.businesses = combinedBusinesses;\n        return combinedBusinesses;\n      }\n    } catch (error) {\n      console.error('Error loading businesses from Firebase:', error);\n    }\n    \n    // Fallback a datos locales si Firebase falla\n    return [...this.businesses];\n  }\n\n  // Obtener un negocio por ID\n  getBusinessById(id) {\n    return this.businesses.find(business => business.id === id);\n  }\n\n  // Agregar un nuevo negocio\n  addBusiness(businessData) {\n    const newBusiness = {\n      id: Date.now(), // Generar ID único\n      ...businessData,\n      rating: 5.0, // Rating inicial\n      isOpen: true,\n      products: businessData.products || [],\n      offers: businessData.offers || []\n    };\n    \n    this.businesses.push(newBusiness);\n    this.notifyListeners();\n    return newBusiness;\n  }\n\n  // Actualizar un negocio existente\n  updateBusiness(id, updates) {\n    const index = this.businesses.findIndex(business => business.id === id);\n    if (index !== -1) {\n      this.businesses[index] = { ...this.businesses[index], ...updates };\n      this.notifyListeners();\n      return this.businesses[index];\n    }\n    return null;\n  }\n\n  // Agregar producto a un negocio\n  addProductToBusiness(businessId, product) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      const newProduct = {\n        id: Date.now(),\n        ...product\n      };\n      business.products.push(newProduct);\n      this.notifyListeners();\n      return newProduct;\n    }\n    return null;\n  }\n\n  // Actualizar producto de un negocio\n  updateBusinessProduct(businessId, productId, updates) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      const productIndex = business.products.findIndex(p => p.id === productId);\n      if (productIndex !== -1) {\n        business.products[productIndex] = { ...business.products[productIndex], ...updates };\n        this.notifyListeners();\n        return business.products[productIndex];\n      }\n    }\n    return null;\n  }\n\n  // Eliminar producto de un negocio\n  removeProductFromBusiness(businessId, productId) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      business.products = business.products.filter(p => p.id !== productId);\n      this.notifyListeners();\n      return true;\n    }\n    return false;\n  }\n\n  // Agregar oferta a un negocio\n  addOfferToBusiness(businessId, offer) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      const newOffer = {\n        id: Date.now(),\n        ...offer\n      };\n      business.offers.push(newOffer);\n      this.notifyListeners();\n      return newOffer;\n    }\n    return null;\n  }\n\n  // Actualizar oferta de un negocio\n  updateBusinessOffer(businessId, offerId, updates) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      const offerIndex = business.offers.findIndex(o => o.id === offerId);\n      if (offerIndex !== -1) {\n        business.offers[offerIndex] = { ...business.offers[offerIndex], ...updates };\n        this.notifyListeners();\n        return business.offers[offerIndex];\n      }\n    }\n    return null;\n  }\n\n  // Eliminar oferta de un negocio\n  removeOfferFromBusiness(businessId, offerId) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      business.offers = business.offers.filter(o => o.id !== offerId);\n      this.notifyListeners();\n      return true;\n    }\n    return false;\n  }\n\n  // Obtener negocios abiertos\n  getOpenBusinesses() {\n    return this.businesses.filter(business => business.isOpen);\n  }\n\n  // Obtener negocios por categoría\n  getBusinessesByCategory(category) {\n    return this.businesses.filter(business => \n      business.category.toLowerCase().includes(category.toLowerCase()) ||\n      business.type.toLowerCase().includes(category.toLowerCase())\n    );\n  }\n\n  // Buscar negocios\n  searchBusinesses(query) {\n    const searchTerm = query.toLowerCase();\n    return this.businesses.filter(business => \n      business.name.toLowerCase().includes(searchTerm) ||\n      business.type.toLowerCase().includes(searchTerm) ||\n      business.category.toLowerCase().includes(searchTerm) ||\n      business.description.toLowerCase().includes(searchTerm)\n    );\n  }\n\n  // Suscribirse a cambios\n  subscribe(listener) {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter(l => l !== listener);\n    };\n  }\n\n  // Notificar a los listeners\n  notifyListeners() {\n    this.listeners.forEach(listener => listener(this.businesses));\n  }\n\n  // Cambiar estado de apertura de un negocio\n  toggleBusinessStatus(businessId) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      business.isOpen = !business.isOpen;\n      this.notifyListeners();\n      return business.isOpen;\n    }\n    return null;\n  }\n\n  // Obtener estadísticas de un negocio\n  getBusinessStats(businessId) {\n    const business = this.getBusinessById(businessId);\n    if (business) {\n      return {\n        totalProducts: business.products.length,\n        availableProducts: business.products.filter(p => p.available).length,\n        totalOffers: business.offers.length,\n        activeOffers: business.offers.filter(o => o.active).length,\n        rating: business.rating\n      };\n    }\n    return null;\n  }\n\n  // === MÉTODOS FIREBASE ===\n  \n  // Crear o actualizar perfil de negocio en Firebase\n  async createOrUpdateBusinessInFirebase(businessData) {\n    try {\n      const businessRef = doc(db, BUSINESSES_COLLECTION, businessData.id.toString());\n      await setDoc(businessRef, {\n        ...businessData,\n        createdAt: businessData.createdAt || new Date(),\n        updatedAt: new Date(),\n        isActive: businessData.isActive !== undefined ? businessData.isActive : true\n      }, { merge: true });\n      \n      return { id: businessData.id, ...businessData };\n    } catch (error) {\n      console.error('Error creating/updating business in Firebase:', error);\n      throw error;\n    }\n  }\n\n  // Obtener negocios activos desde Firebase\n  async getActiveBusinessesFromFirebase() {\n    try {\n      const businessesRef = collection(db, BUSINESSES_COLLECTION);\n      const q = query(\n        businessesRef, \n        where('isActive', '==', true),\n        orderBy('name')\n      );\n      \n      const querySnapshot = await getDocs(q);\n      const businesses = [];\n      \n      querySnapshot.forEach((doc) => {\n        businesses.push({ id: doc.id, ...doc.data() });\n      });\n      \n      return businesses;\n    } catch (error) {\n      console.error('Error getting active businesses from Firebase:', error);\n      // Fallback a datos locales si Firebase falla\n      return this.getOpenBusinesses();\n    }\n  }\n\n  // Actualizar estado del negocio en Firebase\n  async updateBusinessStatusInFirebase(businessId, isOpen) {\n    try {\n      const businessRef = doc(db, BUSINESSES_COLLECTION, businessId.toString());\n      await updateDoc(businessRef, {\n        isOpen: isOpen,\n        updatedAt: new Date()\n      });\n    } catch (error) {\n      console.error('Error updating business status in Firebase:', error);\n      throw error;\n    }\n  }\n}\n\n// Crear instancia singleton\nconst businessService = new BusinessService();\n\nexport default businessService;\n\n// Exportar también la clase para testing\nexport { BusinessService };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}