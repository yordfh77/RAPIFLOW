{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile, GoogleAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\nimport { auth, db } from \"../config/firebase\";\nimport * as AuthSession from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Crypto from 'expo-crypto';\nexport var USER_TYPES = {\n  CLIENT: 'cliente',\n  BUSINESS: 'negocio',\n  DRIVER: 'repartidor'\n};\nexport var registerUser = function () {\n  var _ref = _asyncToGenerator(function* (userData) {\n    try {\n      console.log('=== AUTHSERVICE: Iniciando registro ===');\n      console.log('Datos recibidos:', userData);\n      var email = userData.email,\n        password = userData.password,\n        name = userData.name,\n        phone = userData.phone,\n        address = userData.address,\n        userType = userData.userType,\n        businessName = userData.businessName,\n        businessType = userData.businessType,\n        vehicleType = userData.vehicleType,\n        licenseNumber = userData.licenseNumber;\n      console.log('Creando usuario en Firebase Auth...');\n      var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n      var user = userCredential.user;\n      console.log('Usuario creado en Auth:', user.uid);\n      console.log('Actualizando perfil del usuario...');\n      yield updateProfile(user, {\n        displayName: name\n      });\n      console.log('Preparando datos para Firestore...');\n      var userDocData = {\n        uid: user.uid,\n        name: name,\n        email: email,\n        phone: phone,\n        address: address,\n        userType: userType,\n        createdAt: new Date().toISOString(),\n        isActive: true,\n        profileComplete: true\n      };\n      if (userType === USER_TYPES.BUSINESS) {\n        userDocData.businessName = businessName;\n        userDocData.businessType = businessType;\n        userDocData.businessInfo = {\n          isOpen: false,\n          rating: 0,\n          totalOrders: 0,\n          totalRevenue: 0,\n          categories: [],\n          description: '',\n          deliveryFee: 0,\n          minOrderValue: 0\n        };\n      } else if (userType === USER_TYPES.DRIVER) {\n        userDocData.vehicleType = vehicleType;\n        userDocData.licenseNumber = licenseNumber;\n        userDocData.driverInfo = {\n          isOnline: false,\n          rating: 0,\n          totalDeliveries: 0,\n          totalEarnings: 0,\n          isVerified: false\n        };\n      } else if (userType === USER_TYPES.CLIENT) {\n        userDocData.clientInfo = {\n          totalOrders: 0,\n          totalSpent: 0,\n          favoriteRestaurants: [],\n          addresses: [address],\n          paymentMethods: []\n        };\n      }\n      console.log('Guardando documento en Firestore...');\n      console.log('Datos del documento:', userDocData);\n      yield setDoc(doc(db, 'users', user.uid), userDocData);\n      console.log('Documento guardado exitosamente en Firestore');\n      var successResult = {\n        success: true,\n        user: {\n          uid: user.uid,\n          email: user.email,\n          name: name,\n          userType: userType\n        }\n      };\n      console.log('=== AUTHSERVICE: Registro completado exitosamente ===');\n      console.log('Resultado:', successResult);\n      return successResult;\n    } catch (error) {\n      console.error('=== AUTHSERVICE: Error en el registro ===');\n      console.error('Error completo:', error);\n      console.error('Código de error:', error.code);\n      console.error('Mensaje de error:', error.message);\n      var errorResult = {\n        success: false,\n        error: getErrorMessage(error.code)\n      };\n      console.log('Resultado de error:', errorResult);\n      return errorResult;\n    }\n  });\n  return function registerUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var loginUser = function () {\n  var _ref2 = _asyncToGenerator(function* (email, password) {\n    try {\n      var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n      var user = userCredential.user;\n      var userDoc = yield getDoc(doc(db, 'users', user.uid));\n      if (userDoc.exists()) {\n        var userData = userDoc.data();\n        return {\n          success: true,\n          user: _objectSpread({\n            uid: user.uid,\n            email: user.email,\n            name: userData.name,\n            userType: userData.userType\n          }, userData)\n        };\n      } else {\n        return {\n          success: false,\n          error: 'No se encontraron datos del usuario'\n        };\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      return {\n        success: false,\n        error: getErrorMessage(error.code)\n      };\n    }\n  });\n  return function loginUser(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var logoutUser = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    try {\n      yield signOut(auth);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error logging out:', error);\n      return {\n        success: false,\n        error: getErrorMessage(error.code)\n      };\n    }\n  });\n  return function logoutUser() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getCurrentUser = function getCurrentUser() {\n  return auth.currentUser;\n};\nexport var onAuthStateChange = function onAuthStateChange(callback) {\n  return onAuthStateChanged(auth, function () {\n    var _ref4 = _asyncToGenerator(function* (user) {\n      if (user) {\n        try {\n          var userDoc = yield getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            var userData = userDoc.data();\n            callback(_objectSpread({\n              uid: user.uid,\n              email: user.email,\n              name: userData.name,\n              userType: userData.userType\n            }, userData));\n          } else {\n            callback(null);\n          }\n        } catch (error) {\n          console.error('Error getting user data:', error);\n          callback(null);\n        }\n      } else {\n        callback(null);\n      }\n    });\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n};\nexport var updateUserProfile = function () {\n  var _ref5 = _asyncToGenerator(function* (userId, updateData) {\n    try {\n      var userRef = doc(db, 'users', userId);\n      yield updateDoc(userRef, _objectSpread(_objectSpread({}, updateData), {}, {\n        updatedAt: new Date().toISOString()\n      }));\n      if (updateData.name && auth.currentUser) {\n        yield updateProfile(auth.currentUser, {\n          displayName: updateData.name\n        });\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      return {\n        success: false,\n        error: getErrorMessage(error.code)\n      };\n    }\n  });\n  return function updateUserProfile(_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getUserData = function () {\n  var _ref6 = _asyncToGenerator(function* (userId) {\n    try {\n      var userDoc = yield getDoc(doc(db, 'users', userId));\n      if (userDoc.exists()) {\n        return {\n          success: true,\n          userData: userDoc.data()\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Usuario no encontrado'\n        };\n      }\n    } catch (error) {\n      console.error('Error getting user data:', error);\n      return {\n        success: false,\n        error: getErrorMessage(error.code)\n      };\n    }\n  });\n  return function getUserData(_x7) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar getErrorMessage = function getErrorMessage(errorCode) {\n  var errorMessages = {\n    'auth/user-not-found': 'No se encontró una cuenta con este correo electrónico',\n    'auth/wrong-password': 'Contraseña incorrecta',\n    'auth/email-already-in-use': 'Ya existe una cuenta con este correo electrónico',\n    'auth/weak-password': 'La contraseña debe tener al menos 6 caracteres',\n    'auth/invalid-email': 'Correo electrónico inválido',\n    'auth/user-disabled': 'Esta cuenta ha sido deshabilitada',\n    'auth/too-many-requests': 'Demasiados intentos fallidos. Intenta más tarde',\n    'auth/network-request-failed': 'Error de conexión. Verifica tu internet',\n    'auth/invalid-credential': 'Credenciales inválidas'\n  };\n  return errorMessages[errorCode] || 'Ha ocurrido un error inesperado';\n};\nexport var validateEmail = function validateEmail(email) {\n  var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\nexport var validatePassword = function validatePassword(password) {\n  return password.length >= 6;\n};\nexport var validateCubanPhone = function validateCubanPhone(phone) {\n  var cubanPhoneRegex = /^(\\+53)?[5-8]\\d{7}$/;\n  return cubanPhoneRegex.test(phone.replace(/\\s/g, ''));\n};","map":{"version":3,"names":["signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","GoogleAuthProvider","signInWithCredential","doc","setDoc","getDoc","updateDoc","auth","db","AuthSession","WebBrowser","Crypto","USER_TYPES","CLIENT","BUSINESS","DRIVER","registerUser","_ref","_asyncToGenerator","userData","console","log","email","password","name","phone","address","userType","businessName","businessType","vehicleType","licenseNumber","userCredential","user","uid","displayName","userDocData","createdAt","Date","toISOString","isActive","profileComplete","businessInfo","isOpen","rating","totalOrders","totalRevenue","categories","description","deliveryFee","minOrderValue","driverInfo","isOnline","totalDeliveries","totalEarnings","isVerified","clientInfo","totalSpent","favoriteRestaurants","addresses","paymentMethods","successResult","success","error","code","message","errorResult","getErrorMessage","_x","apply","arguments","loginUser","_ref2","userDoc","exists","data","_objectSpread","_x2","_x3","logoutUser","_ref3","getCurrentUser","currentUser","onAuthStateChange","callback","_ref4","_x4","updateUserProfile","_ref5","userId","updateData","userRef","updatedAt","_x5","_x6","getUserData","_ref6","_x7","errorCode","errorMessages","validateEmail","emailRegex","test","validatePassword","length","validateCubanPhone","cubanPhoneRegex","replace"],"sources":["D:/HARBOR/RAPIFLOW/src/services/authService.js"],"sourcesContent":["import { \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  updateProfile,\n  GoogleAuthProvider,\n  signInWithCredential\n} from 'firebase/auth';\nimport { \n  doc, \n  setDoc, \n  getDoc, \n  updateDoc \n} from 'firebase/firestore';\nimport { auth, db } from '../config/firebase';\nimport * as AuthSession from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Crypto from 'expo-crypto';\n\n// Tipos de usuario disponibles\nexport const USER_TYPES = {\n  CLIENT: 'cliente',\n  BUSINESS: 'negocio', \n  DRIVER: 'repartidor'\n};\n\n// Función para registrar un nuevo usuario\nexport const registerUser = async (userData) => {\n  try {\n    console.log('=== AUTHSERVICE: Iniciando registro ===');\n    console.log('Datos recibidos:', userData);\n    \n    const { email, password, name, phone, address, userType, businessName, businessType, vehicleType, licenseNumber } = userData;\n    \n    console.log('Creando usuario en Firebase Auth...');\n    // Crear usuario en Firebase Auth\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    console.log('Usuario creado en Auth:', user.uid);\n    \n    console.log('Actualizando perfil del usuario...');\n    // Actualizar el perfil con el nombre\n    await updateProfile(user, {\n      displayName: name\n    });\n    \n    console.log('Preparando datos para Firestore...');\n    // Crear documento del usuario en Firestore\n    const userDocData = {\n      uid: user.uid,\n      name,\n      email,\n      phone,\n      address,\n      userType,\n      createdAt: new Date().toISOString(),\n      isActive: true,\n      profileComplete: true\n    };\n    \n    // Agregar campos específicos según el tipo de usuario\n    if (userType === USER_TYPES.BUSINESS) {\n      userDocData.businessName = businessName;\n      userDocData.businessType = businessType;\n      userDocData.businessInfo = {\n        isOpen: false,\n        rating: 0,\n        totalOrders: 0,\n        totalRevenue: 0,\n        categories: [],\n        description: '',\n        deliveryFee: 0,\n        minOrderValue: 0\n      };\n    } else if (userType === USER_TYPES.DRIVER) {\n      userDocData.vehicleType = vehicleType;\n      userDocData.licenseNumber = licenseNumber;\n      userDocData.driverInfo = {\n        isOnline: false,\n        rating: 0,\n        totalDeliveries: 0,\n        totalEarnings: 0,\n        isVerified: false\n      };\n    } else if (userType === USER_TYPES.CLIENT) {\n      userDocData.clientInfo = {\n        totalOrders: 0,\n        totalSpent: 0,\n        favoriteRestaurants: [],\n        addresses: [address],\n        paymentMethods: []\n      };\n    }\n    \n    console.log('Guardando documento en Firestore...');\n    console.log('Datos del documento:', userDocData);\n    await setDoc(doc(db, 'users', user.uid), userDocData);\n    console.log('Documento guardado exitosamente en Firestore');\n    \n    const successResult = {\n      success: true,\n      user: {\n        uid: user.uid,\n        email: user.email,\n        name,\n        userType\n      }\n    };\n    console.log('=== AUTHSERVICE: Registro completado exitosamente ===');\n    console.log('Resultado:', successResult);\n    return successResult;\n  } catch (error) {\n    console.error('=== AUTHSERVICE: Error en el registro ===');\n    console.error('Error completo:', error);\n    console.error('Código de error:', error.code);\n    console.error('Mensaje de error:', error.message);\n    const errorResult = {\n      success: false,\n      error: getErrorMessage(error.code)\n    };\n    console.log('Resultado de error:', errorResult);\n    return errorResult;\n  }\n};\n\n// Función para iniciar sesión\nexport const loginUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    \n    // Obtener datos adicionales del usuario desde Firestore\n    const userDoc = await getDoc(doc(db, 'users', user.uid));\n    \n    if (userDoc.exists()) {\n      const userData = userDoc.data();\n      return {\n        success: true,\n        user: {\n          uid: user.uid,\n          email: user.email,\n          name: userData.name,\n          userType: userData.userType,\n          ...userData\n        }\n      };\n    } else {\n      return {\n        success: false,\n        error: 'No se encontraron datos del usuario'\n      };\n    }\n  } catch (error) {\n    console.error('Error logging in:', error);\n    return {\n      success: false,\n      error: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Función para cerrar sesión\nexport const logoutUser = async () => {\n  try {\n    await signOut(auth);\n    return { success: true };\n  } catch (error) {\n    console.error('Error logging out:', error);\n    return {\n      success: false,\n      error: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Función para obtener el usuario actual\nexport const getCurrentUser = () => {\n  return auth.currentUser;\n};\n\n// Función para escuchar cambios en el estado de autenticación\nexport const onAuthStateChange = (callback) => {\n  return onAuthStateChanged(auth, async (user) => {\n    if (user) {\n      // Usuario autenticado, obtener datos adicionales\n      try {\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          callback({\n            uid: user.uid,\n            email: user.email,\n            name: userData.name,\n            userType: userData.userType,\n            ...userData\n          });\n        } else {\n          callback(null);\n        }\n      } catch (error) {\n        console.error('Error getting user data:', error);\n        callback(null);\n      }\n    } else {\n      // Usuario no autenticado\n      callback(null);\n    }\n  });\n};\n\n// Función para actualizar el perfil del usuario\nexport const updateUserProfile = async (userId, updateData) => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    await updateDoc(userRef, {\n      ...updateData,\n      updatedAt: new Date().toISOString()\n    });\n    \n    // Si se actualiza el nombre, también actualizar en Auth\n    if (updateData.name && auth.currentUser) {\n      await updateProfile(auth.currentUser, {\n        displayName: updateData.name\n      });\n    }\n    \n    return { success: true };\n  } catch (error) {\n    console.error('Error updating profile:', error);\n    return {\n      success: false,\n      error: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Función para obtener datos del usuario por ID\nexport const getUserData = async (userId) => {\n  try {\n    const userDoc = await getDoc(doc(db, 'users', userId));\n    if (userDoc.exists()) {\n      return {\n        success: true,\n        userData: userDoc.data()\n      };\n    } else {\n      return {\n        success: false,\n        error: 'Usuario no encontrado'\n      };\n    }\n  } catch (error) {\n    console.error('Error getting user data:', error);\n    return {\n      success: false,\n      error: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Función para obtener mensajes de error en español\nconst getErrorMessage = (errorCode) => {\n  const errorMessages = {\n    'auth/user-not-found': 'No se encontró una cuenta con este correo electrónico',\n    'auth/wrong-password': 'Contraseña incorrecta',\n    'auth/email-already-in-use': 'Ya existe una cuenta con este correo electrónico',\n    'auth/weak-password': 'La contraseña debe tener al menos 6 caracteres',\n    'auth/invalid-email': 'Correo electrónico inválido',\n    'auth/user-disabled': 'Esta cuenta ha sido deshabilitada',\n    'auth/too-many-requests': 'Demasiados intentos fallidos. Intenta más tarde',\n    'auth/network-request-failed': 'Error de conexión. Verifica tu internet',\n    'auth/invalid-credential': 'Credenciales inválidas'\n  };\n  \n  return errorMessages[errorCode] || 'Ha ocurrido un error inesperado';\n};\n\n// Función para validar email\nexport const validateEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// Función para validar contraseña\nexport const validatePassword = (password) => {\n  return password.length >= 6;\n};\n\n// Función para validar teléfono cubano\nexport const validateCubanPhone = (phone) => {\n  const cubanPhoneRegex = /^(\\+53)?[5-8]\\d{7}$/;\n  return cubanPhoneRegex.test(phone.replace(/\\s/g, ''));\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}