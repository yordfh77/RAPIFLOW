{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\nimport { auth, db } from \"../config/firebase\";\nimport { GOOGLE_CONFIG } from \"../config/googleConfig\";\nexport var USER_TYPES = {\n  CLIENT: 'client',\n  BUSINESS: 'business',\n  DRIVER: 'driver'\n};\nexport var registerUser = function () {\n  var _ref = _asyncToGenerator(function* (email, password, name, userType) {\n    var additionalData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    try {\n      var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n      var user = userCredential.user;\n      yield updateProfile(user, {\n        displayName: name\n      });\n      var userData = _objectSpread({\n        uid: user.uid,\n        email: user.email,\n        name: name,\n        userType: userType,\n        createdAt: new Date().toISOString()\n      }, additionalData);\n      switch (userType) {\n        case USER_TYPES.CLIENT:\n          userData = _objectSpread(_objectSpread({}, userData), {}, {\n            address: additionalData.address || '',\n            phone: additionalData.phone || ''\n          });\n          break;\n        case USER_TYPES.BUSINESS:\n          userData = _objectSpread(_objectSpread({}, userData), {}, {\n            businessName: additionalData.businessName || '',\n            businessType: additionalData.businessType || '',\n            address: additionalData.address || '',\n            phone: additionalData.phone || '',\n            description: additionalData.description || ''\n          });\n          break;\n        case USER_TYPES.DRIVER:\n          userData = _objectSpread(_objectSpread({}, userData), {}, {\n            vehicleType: additionalData.vehicleType || '',\n            licensePlate: additionalData.licensePlate || '',\n            phone: additionalData.phone || '',\n            isAvailable: true\n          });\n          break;\n      }\n      yield setDoc(doc(db, 'users', user.uid), userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      console.error('Error registering user:', error);\n      return {\n        success: false,\n        error: getErrorMessage(error.code)\n      };\n    }\n  });\n  return function registerUser(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var loginUser = function () {\n  var _ref2 = _asyncToGenerator(function* (email, password) {\n    try {\n      var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n      var user = userCredential.user;\n      var userDoc = yield getDoc(doc(db, 'users', user.uid));\n      if (userDoc.exists()) {\n        var userData = userDoc.data();\n        return {\n          success: true,\n          user: _objectSpread({\n            uid: user.uid,\n            email: user.email,\n            name: userData.name,\n            userType: userData.userType\n          }, userData)\n        };\n      } else {\n        return {\n          success: false,\n          error: 'No se encontraron datos del usuario'\n        };\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      return {\n        success: false,\n        error: getErrorMessage(error.code)\n      };\n    }\n  });\n  return function loginUser(_x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var signInWithGoogle = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    try {\n      var provider = new GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      var result = yield signInWithPopup(auth, provider);\n      var user = result.user;\n      var userDoc = yield getDoc(doc(db, 'users', user.uid));\n      if (userDoc.exists()) {\n        var userData = userDoc.data();\n        return {\n          success: true,\n          user: _objectSpread({\n            uid: user.uid,\n            email: user.email,\n            name: userData.name,\n            userType: userData.userType\n          }, userData)\n        };\n      } else {\n        return {\n          success: true,\n          isNewUser: true,\n          user: {\n            uid: user.uid,\n            email: user.email,\n            name: user.displayName,\n            photoURL: user.photoURL\n          }\n        };\n      }\n    } catch (error) {\n      console.error('Error with Google Sign-In:', error);\n      return {\n        success: false,\n        error: 'Error al iniciar sesión con Google'\n      };\n    }\n  });\n  return function signInWithGoogle() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var completeGoogleUserRegistration = function () {\n  var _ref4 = _asyncToGenerator(function* (user, userType) {\n    var additionalData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    try {\n      var userData = _objectSpread({\n        uid: user.uid,\n        email: user.email,\n        name: user.name,\n        userType: userType,\n        photoURL: user.photoURL || '',\n        createdAt: new Date().toISOString()\n      }, additionalData);\n      switch (userType) {\n        case USER_TYPES.CLIENT:\n          userData = _objectSpread(_objectSpread({}, userData), {}, {\n            address: '',\n            phone: ''\n          });\n          break;\n        case USER_TYPES.BUSINESS:\n          userData = _objectSpread(_objectSpread({}, userData), {}, {\n            businessName: '',\n            businessType: '',\n            address: '',\n            phone: '',\n            description: ''\n          });\n          break;\n        case USER_TYPES.DRIVER:\n          userData = _objectSpread(_objectSpread({}, userData), {}, {\n            vehicleType: '',\n            licensePlate: '',\n            phone: '',\n            isAvailable: true\n          });\n          break;\n      }\n      yield setDoc(doc(db, 'users', user.uid), userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      console.error('Error completing Google user registration:', error);\n      return {\n        success: false,\n        error: 'Error al completar el registro'\n      };\n    }\n  });\n  return function completeGoogleUserRegistration(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var logoutUser = function () {\n  var _ref5 = _asyncToGenerator(function* () {\n    try {\n      yield signOut(auth);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error logging out:', error);\n      return {\n        success: false,\n        error: 'Error al cerrar sesión'\n      };\n    }\n  });\n  return function logoutUser() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getCurrentUser = function getCurrentUser() {\n  return auth.currentUser;\n};\nexport var onAuthStateChange = function onAuthStateChange(callback) {\n  return onAuthStateChanged(auth, function () {\n    var _ref6 = _asyncToGenerator(function* (user) {\n      if (user) {\n        try {\n          var userDoc = yield getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            var userData = userDoc.data();\n            callback(_objectSpread({\n              uid: user.uid,\n              email: user.email,\n              name: userData.name,\n              userType: userData.userType\n            }, userData));\n          } else {\n            callback(null);\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          callback(null);\n        }\n      } else {\n        callback(null);\n      }\n    });\n    return function (_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n};\nexport var updateUserProfile = function () {\n  var _ref7 = _asyncToGenerator(function* (userId, updates) {\n    try {\n      var userRef = doc(db, 'users', userId);\n      yield updateDoc(userRef, _objectSpread(_objectSpread({}, updates), {}, {\n        updatedAt: new Date().toISOString()\n      }));\n      if (updates.name && auth.currentUser) {\n        yield updateProfile(auth.currentUser, {\n          displayName: updates.name\n        });\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      return {\n        success: false,\n        error: 'Error al actualizar el perfil'\n      };\n    }\n  });\n  return function updateUserProfile(_x0, _x1) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var getUserData = function () {\n  var _ref8 = _asyncToGenerator(function* (userId) {\n    try {\n      var userDoc = yield getDoc(doc(db, 'users', userId));\n      if (userDoc.exists()) {\n        return {\n          success: true,\n          user: userDoc.data()\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Usuario no encontrado'\n        };\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return {\n        success: false,\n        error: 'Error al obtener datos del usuario'\n      };\n    }\n  });\n  return function getUserData(_x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar getErrorMessage = function getErrorMessage(errorCode) {\n  var errorMessages = {\n    'auth/user-not-found': 'Usuario no encontrado',\n    'auth/wrong-password': 'Contraseña incorrecta',\n    'auth/email-already-in-use': 'El email ya está en uso',\n    'auth/weak-password': 'La contraseña es muy débil',\n    'auth/invalid-email': 'Email inválido',\n    'auth/user-disabled': 'Usuario deshabilitado',\n    'auth/too-many-requests': 'Demasiados intentos. Intenta más tarde',\n    'auth/network-request-failed': 'Error de conexión',\n    'auth/popup-closed-by-user': 'Ventana de autenticación cerrada',\n    'auth/popup-blocked': 'Ventana emergente bloqueada por el navegador'\n  };\n  return errorMessages[errorCode] || 'Error desconocido';\n};\nexport var validateEmail = function validateEmail(email) {\n  var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\nexport var validatePassword = function validatePassword(password) {\n  return password.length >= 6;\n};\nexport var validateCubanPhone = function validateCubanPhone(phone) {\n  var cubanPhoneRegex = /^(\\+53)?[5-8]\\d{7}$/;\n  return cubanPhoneRegex.test(phone.replace(/\\s/g, ''));\n};","map":{"version":3,"names":["signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","GoogleAuthProvider","signInWithPopup","doc","setDoc","getDoc","updateDoc","auth","db","GOOGLE_CONFIG","USER_TYPES","CLIENT","BUSINESS","DRIVER","registerUser","_ref","_asyncToGenerator","email","password","name","userType","additionalData","arguments","length","undefined","userCredential","user","displayName","userData","_objectSpread","uid","createdAt","Date","toISOString","address","phone","businessName","businessType","description","vehicleType","licensePlate","isAvailable","success","error","console","getErrorMessage","code","_x","_x2","_x3","_x4","apply","loginUser","_ref2","userDoc","exists","data","_x5","_x6","signInWithGoogle","_ref3","provider","addScope","result","isNewUser","photoURL","completeGoogleUserRegistration","_ref4","_x7","_x8","logoutUser","_ref5","getCurrentUser","currentUser","onAuthStateChange","callback","_ref6","_x9","updateUserProfile","_ref7","userId","updates","userRef","updatedAt","_x0","_x1","getUserData","_ref8","_x10","errorCode","errorMessages","validateEmail","emailRegex","test","validatePassword","validateCubanPhone","cubanPhoneRegex","replace"],"sources":["D:/HARBOR/RAPIFLOW/src/services/authService.web.js"],"sourcesContent":["// Versión web del authService con Google OAuth nativo\nimport { \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  updateProfile,\n  GoogleAuthProvider,\n  signInWithPopup\n} from 'firebase/auth';\nimport { \n  doc, \n  setDoc, \n  getDoc, \n  updateDoc \n} from 'firebase/firestore';\nimport { auth, db } from '../config/firebase';\nimport { GOOGLE_CONFIG } from '../config/googleConfig';\n\n// Tipos de usuario disponibles\nexport const USER_TYPES = {\n  CLIENT: 'client',\n  BUSINESS: 'business',\n  DRIVER: 'driver'\n};\n\n// Función para registrar un nuevo usuario\nexport const registerUser = async (email, password, name, userType, additionalData = {}) => {\n  try {\n    // Crear usuario en Firebase Auth\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Actualizar el perfil con el nombre\n    await updateProfile(user, {\n      displayName: name\n    });\n\n    // Preparar datos del usuario según el tipo\n    let userData = {\n      uid: user.uid,\n      email: user.email,\n      name: name,\n      userType: userType,\n      createdAt: new Date().toISOString(),\n      ...additionalData\n    };\n\n    // Agregar campos específicos según el tipo de usuario\n    switch (userType) {\n      case USER_TYPES.CLIENT:\n        userData = {\n          ...userData,\n          address: additionalData.address || '',\n          phone: additionalData.phone || ''\n        };\n        break;\n      case USER_TYPES.BUSINESS:\n        userData = {\n          ...userData,\n          businessName: additionalData.businessName || '',\n          businessType: additionalData.businessType || '',\n          address: additionalData.address || '',\n          phone: additionalData.phone || '',\n          description: additionalData.description || ''\n        };\n        break;\n      case USER_TYPES.DRIVER:\n        userData = {\n          ...userData,\n          vehicleType: additionalData.vehicleType || '',\n          licensePlate: additionalData.licensePlate || '',\n          phone: additionalData.phone || '',\n          isAvailable: true\n        };\n        break;\n    }\n\n    // Guardar datos del usuario en Firestore\n    await setDoc(doc(db, 'users', user.uid), userData);\n\n    return {\n      success: true,\n      user: userData\n    };\n  } catch (error) {\n    console.error('Error registering user:', error);\n    return {\n      success: false,\n      error: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Función para iniciar sesión con email y contraseña\nexport const loginUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Obtener datos adicionales del usuario desde Firestore\n    const userDoc = await getDoc(doc(db, 'users', user.uid));\n    \n    if (userDoc.exists()) {\n      const userData = userDoc.data();\n      return {\n        success: true,\n        user: {\n          uid: user.uid,\n          email: user.email,\n          name: userData.name,\n          userType: userData.userType,\n          ...userData\n        }\n      };\n    } else {\n      return {\n        success: false,\n        error: 'No se encontraron datos del usuario'\n      };\n    }\n  } catch (error) {\n    console.error('Error logging in:', error);\n    return {\n      success: false,\n      error: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Función para iniciar sesión con Google (versión web)\nexport const signInWithGoogle = async () => {\n  try {\n    const provider = new GoogleAuthProvider();\n    provider.addScope('profile');\n    provider.addScope('email');\n    \n    const result = await signInWithPopup(auth, provider);\n    const user = result.user;\n\n    // Verificar si el usuario ya existe en Firestore\n    const userDoc = await getDoc(doc(db, 'users', user.uid));\n    \n    if (userDoc.exists()) {\n      // Usuario existente\n      const userData = userDoc.data();\n      return {\n        success: true,\n        user: {\n          uid: user.uid,\n          email: user.email,\n          name: userData.name,\n          userType: userData.userType,\n          ...userData\n        }\n      };\n    } else {\n      // Nuevo usuario - necesita completar registro\n      return {\n        success: true,\n        isNewUser: true,\n        user: {\n          uid: user.uid,\n          email: user.email,\n          name: user.displayName,\n          photoURL: user.photoURL\n        }\n      };\n    }\n  } catch (error) {\n    console.error('Error with Google Sign-In:', error);\n    return {\n      success: false,\n      error: 'Error al iniciar sesión con Google'\n    };\n  }\n};\n\n// Función para completar el registro de usuarios de Google\nexport const completeGoogleUserRegistration = async (user, userType, additionalData = {}) => {\n  try {\n    // Preparar datos del usuario según el tipo\n    let userData = {\n      uid: user.uid,\n      email: user.email,\n      name: user.name,\n      userType: userType,\n      photoURL: user.photoURL || '',\n      createdAt: new Date().toISOString(),\n      ...additionalData\n    };\n\n    // Agregar campos específicos según el tipo de usuario\n    switch (userType) {\n      case USER_TYPES.CLIENT:\n        userData = {\n          ...userData,\n          address: '',\n          phone: ''\n        };\n        break;\n      case USER_TYPES.BUSINESS:\n        userData = {\n          ...userData,\n          businessName: '',\n          businessType: '',\n          address: '',\n          phone: '',\n          description: ''\n        };\n        break;\n      case USER_TYPES.DRIVER:\n        userData = {\n          ...userData,\n          vehicleType: '',\n          licensePlate: '',\n          phone: '',\n          isAvailable: true\n        };\n        break;\n    }\n\n    // Guardar datos del usuario en Firestore\n    await setDoc(doc(db, 'users', user.uid), userData);\n\n    return {\n      success: true,\n      user: userData\n    };\n  } catch (error) {\n    console.error('Error completing Google user registration:', error);\n    return {\n      success: false,\n      error: 'Error al completar el registro'\n    };\n  }\n};\n\n// Función para cerrar sesión\nexport const logoutUser = async () => {\n  try {\n    await signOut(auth);\n    return { success: true };\n  } catch (error) {\n    console.error('Error logging out:', error);\n    return {\n      success: false,\n      error: 'Error al cerrar sesión'\n    };\n  }\n};\n\n// Función para obtener el usuario actual\nexport const getCurrentUser = () => {\n  return auth.currentUser;\n};\n\n// Función para escuchar cambios en el estado de autenticación\nexport const onAuthStateChange = (callback) => {\n  return onAuthStateChanged(auth, async (user) => {\n    if (user) {\n      // Usuario autenticado, obtener datos adicionales\n      try {\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          callback({\n            uid: user.uid,\n            email: user.email,\n            name: userData.name,\n            userType: userData.userType,\n            ...userData\n          });\n        } else {\n          callback(null);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        callback(null);\n      }\n    } else {\n      // Usuario no autenticado\n      callback(null);\n    }\n  });\n};\n\n// Función para actualizar el perfil del usuario\nexport const updateUserProfile = async (userId, updates) => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    await updateDoc(userRef, {\n      ...updates,\n      updatedAt: new Date().toISOString()\n    });\n\n    // Si se actualiza el nombre, también actualizar en Auth\n    if (updates.name && auth.currentUser) {\n      await updateProfile(auth.currentUser, {\n        displayName: updates.name\n      });\n    }\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error updating user profile:', error);\n    return {\n      success: false,\n      error: 'Error al actualizar el perfil'\n    };\n  }\n};\n\n// Función para obtener datos de un usuario por ID\nexport const getUserData = async (userId) => {\n  try {\n    const userDoc = await getDoc(doc(db, 'users', userId));\n    if (userDoc.exists()) {\n      return {\n        success: true,\n        user: userDoc.data()\n      };\n    } else {\n      return {\n        success: false,\n        error: 'Usuario no encontrado'\n      };\n    }\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    return {\n      success: false,\n      error: 'Error al obtener datos del usuario'\n    };\n  }\n};\n\n// Función para obtener mensajes de error en español\nconst getErrorMessage = (errorCode) => {\n  const errorMessages = {\n    'auth/user-not-found': 'Usuario no encontrado',\n    'auth/wrong-password': 'Contraseña incorrecta',\n    'auth/email-already-in-use': 'El email ya está en uso',\n    'auth/weak-password': 'La contraseña es muy débil',\n    'auth/invalid-email': 'Email inválido',\n    'auth/user-disabled': 'Usuario deshabilitado',\n    'auth/too-many-requests': 'Demasiados intentos. Intenta más tarde',\n    'auth/network-request-failed': 'Error de conexión',\n    'auth/popup-closed-by-user': 'Ventana de autenticación cerrada',\n    'auth/popup-blocked': 'Ventana emergente bloqueada por el navegador'\n  };\n  \n  return errorMessages[errorCode] || 'Error desconocido';\n};\n\n// Funciones de validación\nexport const validateEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nexport const validatePassword = (password) => {\n  return password.length >= 6;\n};\n\nexport const validateCubanPhone = (phone) => {\n  const cubanPhoneRegex = /^(\\+53)?[5-8]\\d{7}$/;\n  return cubanPhoneRegex.test(phone.replace(/\\s/g, ''));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}