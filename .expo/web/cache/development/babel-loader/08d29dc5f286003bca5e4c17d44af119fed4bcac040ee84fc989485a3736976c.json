{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { ExecutionEnvironment } from \"./Constants.types\";\nvar _sessionId = (Date.now() + '-' + Math.floor(Math.random() * 1000000000)).toString();\nfunction getBrowserName() {\n  if (typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string') {\n    var agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && 'opr' in window && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && 'chrome' in window && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n  return undefined;\n}\nexport default {\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get sessionId() {\n    return _sessionId;\n  },\n  get isHeadless() {\n    if (typeof navigator === 'undefined') return true;\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n  get expoVersion() {\n    return this.manifest.sdkVersion || null;\n  },\n  get linkingUri() {\n    if (typeof location !== 'undefined') {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion() {\n    return this.expoVersion;\n  },\n  get deviceName() {\n    return getBrowserName();\n  },\n  get systemFonts() {\n    return [];\n  },\n  get statusBarHeight() {\n    return 0;\n  },\n  get deviceYearClass() {\n    return null;\n  },\n  get manifest() {\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2() {\n    return null;\n  },\n  get experienceUrl() {\n    if (typeof location !== 'undefined') {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode() {\n    return __DEV__;\n  },\n  getWebViewUserAgentAsync: function () {\n    var _getWebViewUserAgentAsync = _asyncToGenerator(function* () {\n      if (typeof navigator !== 'undefined') {\n        return navigator.userAgent;\n      } else {\n        return null;\n      }\n    });\n    function getWebViewUserAgentAsync() {\n      return _getWebViewUserAgentAsync.apply(this, arguments);\n    }\n    return getWebViewUserAgentAsync;\n  }()\n};","map":{"version":3,"names":["ExecutionEnvironment","_sessionId","Date","now","Math","floor","random","toString","getBrowserName","navigator","userAgent","agent","toLowerCase","includes","window","undefined","appOwnership","executionEnvironment","Bare","sessionId","isHeadless","test","expoVersion","manifest","sdkVersion","linkingUri","location","origin","expoRuntimeVersion","deviceName","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","manifest2","experienceUrl","debugMode","__DEV__","getWebViewUserAgentAsync","_getWebViewUserAgentAsync","_asyncToGenerator","apply","arguments"],"sources":["D:\\HARBOR\\RAPIFLOW\\node_modules\\expo-auth-session\\node_modules\\expo-constants\\src\\ExponentConstants.web.ts"],"sourcesContent":["import { ExecutionEnvironment, NativeConstants, WebManifest } from './Constants.types';\n\ndeclare let __DEV__: boolean;\ndeclare let process: { env: any };\ndeclare let navigator: Navigator;\ndeclare let location: Location;\n\nconst _sessionId = (Date.now() + '-' + Math.floor(Math.random() * 1000000000)).toString();\n\nfunction getBrowserName(): string | undefined {\n  if (typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string') {\n    const agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && 'opr' in window && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && 'chrome' in window && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get sessionId(): string {\n    return _sessionId;\n  },\n  get isHeadless(): boolean {\n    if (typeof navigator === 'undefined') return true;\n\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n\n  get expoVersion(): string | null {\n    return (this.manifest as any)!.sdkVersion || null;\n  },\n  get linkingUri(): string {\n    if (typeof location !== 'undefined') {\n      // On native this is `exp://`\n      // On web we should use the protocol and hostname (location.origin)\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion(): string | null {\n    return this.expoVersion;\n  },\n  get deviceName(): string | undefined {\n    return getBrowserName();\n  },\n  get systemFonts(): string[] {\n    // TODO: Bacon: Maybe possible.\n    return [];\n  },\n  get statusBarHeight(): number {\n    return 0;\n  },\n  get deviceYearClass(): number | null {\n    // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n    return null;\n  },\n  get manifest(): WebManifest {\n    // This is defined by @expo/webpack-config or babel-preset-expo.\n    // If your site is bundled with a different config then you may not have access to the app.json automatically.\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2(): null {\n    return null;\n  },\n  get experienceUrl(): string {\n    if (typeof location !== 'undefined') {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode(): boolean {\n    return __DEV__;\n  },\n  async getWebViewUserAgentAsync(): Promise<string | null> {\n    if (typeof navigator !== 'undefined') {\n      return navigator.userAgent;\n    } else {\n      return null;\n    }\n  },\n} as NativeConstants;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}